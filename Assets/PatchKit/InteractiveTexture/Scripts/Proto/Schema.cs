// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: schema.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Proto.Messages {

  /// <summary>Holder for reflection information generated from schema.proto</summary>
  public static partial class SchemaReflection {

    #region Descriptor
    /// <summary>File descriptor for schema.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SchemaReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxzY2hlbWEucHJvdG8inwEKI092ZXJsYXlSZWNlaXZlZEtleWJvYXJkSW5w",
            "dXRNZXNzYWdlEgsKA2tleRgBIAEoCRJDCgpldmVudF90eXBlGAIgASgOMi8u",
            "T3ZlcmxheVJlY2VpdmVkS2V5Ym9hcmRJbnB1dE1lc3NhZ2UuRVZFTlRfVFlQ",
            "RSImCgpFVkVOVF9UWVBFEgwKCEtFWV9ET1dOEAASCgoGS0VZX1VQEAEiSQof",
            "T3ZlcmxheVJlY2VpdmVkTW91c2VNb3ZlTWVzc2FnZRISCgp4X3Bvc2l0aW9u",
            "GAEgASgNEhIKCnlfcG9zaXRpb24YAiABKA0ihgIKIE92ZXJsYXlSZWNlaXZl",
            "ZE1vdXNlSW5wdXRNZXNzYWdlEkAKCmV2ZW50X3R5cGUYASABKA4yLC5PdmVy",
            "bGF5UmVjZWl2ZWRNb3VzZUlucHV0TWVzc2FnZS5FVkVOVF9UWVBFEkIKC2J1",
            "dHRvbl90eXBlGAIgASgOMi0uT3ZlcmxheVJlY2VpdmVkTW91c2VJbnB1dE1l",
            "c3NhZ2UuQlVUVE9OX1RZUEUiLAoKRVZFTlRfVFlQRRIPCgtCVVRUT05fRE9X",
            "ThAAEg0KCUJVVFRPTl9VUBABIi4KC0JVVFRPTl9UWVBFEgkKBVJJR0hUEAAS",
            "CAoETEVGVBABEgoKBk1JRERMRRACIjUKJE92ZXJsYXlSZWNlaXZlZE1vdXNl",
            "V2hlZWxNb3ZlTWVzc2FnZRINCgVkZWx0YRgBIAEoDSIaCglCb29sVmFsdWUS",
            "DQoFdmFsdWUYASABKAhCEaoCDlByb3RvLk1lc3NhZ2VzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Messages.OverlayReceivedKeyboardInputMessage), global::Proto.Messages.OverlayReceivedKeyboardInputMessage.Parser, new[]{ "Key", "EventType" }, null, new[]{ typeof(global::Proto.Messages.OverlayReceivedKeyboardInputMessage.Types.EVENT_TYPE) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Messages.OverlayReceivedMouseMoveMessage), global::Proto.Messages.OverlayReceivedMouseMoveMessage.Parser, new[]{ "XPosition", "YPosition" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Messages.OverlayReceivedMouseInputMessage), global::Proto.Messages.OverlayReceivedMouseInputMessage.Parser, new[]{ "EventType", "ButtonType" }, null, new[]{ typeof(global::Proto.Messages.OverlayReceivedMouseInputMessage.Types.EVENT_TYPE), typeof(global::Proto.Messages.OverlayReceivedMouseInputMessage.Types.BUTTON_TYPE) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Messages.OverlayReceivedMouseWheelMoveMessage), global::Proto.Messages.OverlayReceivedMouseWheelMoveMessage.Parser, new[]{ "Delta" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Messages.BoolValue), global::Proto.Messages.BoolValue.Parser, new[]{ "Value" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///*
  /// 
  /// </summary>
  public sealed partial class OverlayReceivedKeyboardInputMessage : pb::IMessage<OverlayReceivedKeyboardInputMessage> {
    private static readonly pb::MessageParser<OverlayReceivedKeyboardInputMessage> _parser = new pb::MessageParser<OverlayReceivedKeyboardInputMessage>(() => new OverlayReceivedKeyboardInputMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OverlayReceivedKeyboardInputMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Messages.SchemaReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlayReceivedKeyboardInputMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlayReceivedKeyboardInputMessage(OverlayReceivedKeyboardInputMessage other) : this() {
      key_ = other.key_;
      eventType_ = other.eventType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlayReceivedKeyboardInputMessage Clone() {
      return new OverlayReceivedKeyboardInputMessage(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "event_type" field.</summary>
    public const int EventTypeFieldNumber = 2;
    private global::Proto.Messages.OverlayReceivedKeyboardInputMessage.Types.EVENT_TYPE eventType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Messages.OverlayReceivedKeyboardInputMessage.Types.EVENT_TYPE EventType {
      get { return eventType_; }
      set {
        eventType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OverlayReceivedKeyboardInputMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OverlayReceivedKeyboardInputMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (EventType != other.EventType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (EventType != 0) hash ^= EventType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (EventType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) EventType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (EventType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EventType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OverlayReceivedKeyboardInputMessage other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.EventType != 0) {
        EventType = other.EventType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 16: {
            EventType = (global::Proto.Messages.OverlayReceivedKeyboardInputMessage.Types.EVENT_TYPE) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the OverlayReceivedKeyboardInputMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EVENT_TYPE {
        [pbr::OriginalName("KEY_DOWN")] KeyDown = 0,
        [pbr::OriginalName("KEY_UP")] KeyUp = 1,
      }

    }
    #endregion

  }

  public sealed partial class OverlayReceivedMouseMoveMessage : pb::IMessage<OverlayReceivedMouseMoveMessage> {
    private static readonly pb::MessageParser<OverlayReceivedMouseMoveMessage> _parser = new pb::MessageParser<OverlayReceivedMouseMoveMessage>(() => new OverlayReceivedMouseMoveMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OverlayReceivedMouseMoveMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Messages.SchemaReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlayReceivedMouseMoveMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlayReceivedMouseMoveMessage(OverlayReceivedMouseMoveMessage other) : this() {
      xPosition_ = other.xPosition_;
      yPosition_ = other.yPosition_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlayReceivedMouseMoveMessage Clone() {
      return new OverlayReceivedMouseMoveMessage(this);
    }

    /// <summary>Field number for the "x_position" field.</summary>
    public const int XPositionFieldNumber = 1;
    private uint xPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint XPosition {
      get { return xPosition_; }
      set {
        xPosition_ = value;
      }
    }

    /// <summary>Field number for the "y_position" field.</summary>
    public const int YPositionFieldNumber = 2;
    private uint yPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint YPosition {
      get { return yPosition_; }
      set {
        yPosition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OverlayReceivedMouseMoveMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OverlayReceivedMouseMoveMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (XPosition != other.XPosition) return false;
      if (YPosition != other.YPosition) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (XPosition != 0) hash ^= XPosition.GetHashCode();
      if (YPosition != 0) hash ^= YPosition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (XPosition != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(XPosition);
      }
      if (YPosition != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(YPosition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (XPosition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(XPosition);
      }
      if (YPosition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(YPosition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OverlayReceivedMouseMoveMessage other) {
      if (other == null) {
        return;
      }
      if (other.XPosition != 0) {
        XPosition = other.XPosition;
      }
      if (other.YPosition != 0) {
        YPosition = other.YPosition;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            XPosition = input.ReadUInt32();
            break;
          }
          case 16: {
            YPosition = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OverlayReceivedMouseInputMessage : pb::IMessage<OverlayReceivedMouseInputMessage> {
    private static readonly pb::MessageParser<OverlayReceivedMouseInputMessage> _parser = new pb::MessageParser<OverlayReceivedMouseInputMessage>(() => new OverlayReceivedMouseInputMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OverlayReceivedMouseInputMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Messages.SchemaReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlayReceivedMouseInputMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlayReceivedMouseInputMessage(OverlayReceivedMouseInputMessage other) : this() {
      eventType_ = other.eventType_;
      buttonType_ = other.buttonType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlayReceivedMouseInputMessage Clone() {
      return new OverlayReceivedMouseInputMessage(this);
    }

    /// <summary>Field number for the "event_type" field.</summary>
    public const int EventTypeFieldNumber = 1;
    private global::Proto.Messages.OverlayReceivedMouseInputMessage.Types.EVENT_TYPE eventType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Messages.OverlayReceivedMouseInputMessage.Types.EVENT_TYPE EventType {
      get { return eventType_; }
      set {
        eventType_ = value;
      }
    }

    /// <summary>Field number for the "button_type" field.</summary>
    public const int ButtonTypeFieldNumber = 2;
    private global::Proto.Messages.OverlayReceivedMouseInputMessage.Types.BUTTON_TYPE buttonType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Messages.OverlayReceivedMouseInputMessage.Types.BUTTON_TYPE ButtonType {
      get { return buttonType_; }
      set {
        buttonType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OverlayReceivedMouseInputMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OverlayReceivedMouseInputMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventType != other.EventType) return false;
      if (ButtonType != other.ButtonType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventType != 0) hash ^= EventType.GetHashCode();
      if (ButtonType != 0) hash ^= ButtonType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EventType);
      }
      if (ButtonType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ButtonType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EventType);
      }
      if (ButtonType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ButtonType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OverlayReceivedMouseInputMessage other) {
      if (other == null) {
        return;
      }
      if (other.EventType != 0) {
        EventType = other.EventType;
      }
      if (other.ButtonType != 0) {
        ButtonType = other.ButtonType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EventType = (global::Proto.Messages.OverlayReceivedMouseInputMessage.Types.EVENT_TYPE) input.ReadEnum();
            break;
          }
          case 16: {
            ButtonType = (global::Proto.Messages.OverlayReceivedMouseInputMessage.Types.BUTTON_TYPE) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the OverlayReceivedMouseInputMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EVENT_TYPE {
        [pbr::OriginalName("BUTTON_DOWN")] ButtonDown = 0,
        [pbr::OriginalName("BUTTON_UP")] ButtonUp = 1,
      }

      public enum BUTTON_TYPE {
        [pbr::OriginalName("RIGHT")] Right = 0,
        [pbr::OriginalName("LEFT")] Left = 1,
        [pbr::OriginalName("MIDDLE")] Middle = 2,
      }

    }
    #endregion

  }

  public sealed partial class OverlayReceivedMouseWheelMoveMessage : pb::IMessage<OverlayReceivedMouseWheelMoveMessage> {
    private static readonly pb::MessageParser<OverlayReceivedMouseWheelMoveMessage> _parser = new pb::MessageParser<OverlayReceivedMouseWheelMoveMessage>(() => new OverlayReceivedMouseWheelMoveMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OverlayReceivedMouseWheelMoveMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Messages.SchemaReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlayReceivedMouseWheelMoveMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlayReceivedMouseWheelMoveMessage(OverlayReceivedMouseWheelMoveMessage other) : this() {
      delta_ = other.delta_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OverlayReceivedMouseWheelMoveMessage Clone() {
      return new OverlayReceivedMouseWheelMoveMessage(this);
    }

    /// <summary>Field number for the "delta" field.</summary>
    public const int DeltaFieldNumber = 1;
    private uint delta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Delta {
      get { return delta_; }
      set {
        delta_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OverlayReceivedMouseWheelMoveMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OverlayReceivedMouseWheelMoveMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Delta != other.Delta) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Delta != 0) hash ^= Delta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Delta != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Delta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Delta != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Delta);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OverlayReceivedMouseWheelMoveMessage other) {
      if (other == null) {
        return;
      }
      if (other.Delta != 0) {
        Delta = other.Delta;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Delta = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BoolValue : pb::IMessage<BoolValue> {
    private static readonly pb::MessageParser<BoolValue> _parser = new pb::MessageParser<BoolValue>(() => new BoolValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BoolValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.Messages.SchemaReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolValue(BoolValue other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolValue Clone() {
      return new BoolValue(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private bool value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BoolValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BoolValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != false) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != false) {
        output.WriteRawTag(8);
        output.WriteBool(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BoolValue other) {
      if (other == null) {
        return;
      }
      if (other.Value != false) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Value = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
